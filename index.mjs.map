{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNodeWritableStreamLike from '@stdlib/assert-is-node-writable-stream-like';\nimport isNodeReadableStreamLike from '@stdlib/assert-is-node-readable-stream-like';\n\n\n// MAIN //\n\n/**\n* Tests if a value is Node duplex stream-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is Node duplex stream-like\n*\n* @example\n* import transformStream from '@stdlib/streams-node-transform';\n*\n* var stream = transformStream();\n*\n* var bool = isNodeDuplexStreamLike( stream );\n* // returns true\n*\n* bool = isNodeDuplexStreamLike( {} );\n* // returns false\n*/\nfunction isNodeDuplexStreamLike( value ) {\n\treturn (\n\t    // Must be both readable and writable:\n\t\t(isNodeWritableStreamLike( value ) && isNodeReadableStreamLike( value ))\n\t);\n}\n\n\n// EXPORTS //\n\nexport default isNodeDuplexStreamLike;\n"],"names":["isNodeDuplexStreamLike","value","isNodeWritableStreamLike","isNodeReadableStreamLike"],"mappings":";;8MA6CA,SAASA,EAAwBC,GAChC,OAEEC,EAA0BD,IAAWE,EAA0BF,EAElE"}